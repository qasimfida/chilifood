{"version":3,"file":"static/js/976.6608390b.chunk.js","mappings":"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","sources":["components/PlanCard/styles.ts","components/PlanCard/index.tsx"],"sourcesContent":["import { Box, Button, CardContent, CardMedia, FormControl, Typography } from '@mui/material';\nimport { css, styled } from '@mui/system';\ninterface StyledCardProps {\n    expended?: string;\n}\n\nexport const StyledMedia = styled(CardMedia)`\n    height: 120px;\n    width: 100%;\n    min-width: 100%;\n    border-radius: 4px;\n    overflow: hidden;\n`;\n\nexport const CardTitle = styled(Typography)`\n    font-weight: 600;\n    font-size: 16px;\n    overflow: hidden;\n    color: ${({ theme: { palette } }) => palette.grey.main};\n    display: flex;\n    justify-content: space-between;\n    flex-direction: row;\n    height: 38px;\n    line-height: 14px;\n    box-sizing: border-box;\n    padding: 12px;\n`;\nexport const Body = styled(Box)`\n    overflow: hidden;\n    display: flex;\n    padding: 0;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n`;\nexport const Description = styled(Typography)<any>`\n    ${({ weight, theme: { palette } }) => css`\n        font-weight: ${weight || '300'};\n        font-size: ${weight ? '16px' : '12px'};\n        color: ${palette.grey.main};\n    `};\n    margin-top: 0px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    max-width: 100%;\n`;\nexport const Details = styled(Box)<StyledCardProps>`\n    padding: 8px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    overflow: hidden;\n    box-sizing: border-box;\n    transition: 0.1s all ease-in;\n    ${({ theme: { palette } }: any) => {\n        return css`\n            background: ${palette.secondary.dark};\n        `;\n    }};\n`;\nexport const Content = styled(CardContent)`\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    box-sizing: border-box;\n    overflow: hidden;\n    &:last-child {\n        padding: 0;\n    }\n`;\n\nexport const FormSelect = styled(FormControl)`\n    width: 174px;\n    min-width: 178px;\n    margin-top: 8px;\n`;\n\nexport const StyledCard = styled(Box)<StyledCardProps>`\n    ${(props) => {\n        const {\n            theme: { palette },\n        } = props;\n        return css`\n            box-sizing: border-box;\n            box-shadow: 0px 0px 10px 2px #fff;\n            padding: 0;\n            max-width: 100%;\n            background: ${palette.secondary.dark};\n            border-radius: 4px;\n            transition: 0.2s all ease;\n            position: relative;\n            &:hover {\n                .title {\n                    color: ${palette.primary.main};\n                }\n                .macros {\n                    right: 0;\n                }\n            }\n            .icon {\n                transition: 0.3s all ease;\n            }\n        `;\n    }}\n`;\nexport const Subscribe = styled(Typography)`\n    position: absolute;\n    font-weight: 300;\n    top: 12px;\n    font-size: 13px;\n    padding: 8px 12px;\n    border-radius: 4px;\n    text-transform: capitalize;\n    ${({ theme: { palette }, dir }) => css`\n        background: ${palette.primary.main};\n        color: #fff;\n    `};\n    ${({ dir }) =>\n        dir === 'rtl' &&\n        css`\n            right: 12px;\n        `};\n    ${({ dir }) =>\n        dir !== 'rtl' &&\n        css`\n            left: 12px;\n        `};\n`;\nexport const MediaWrapper = styled(Button)`\n    position: relative;\n    width: 100%;\n    padding: 0;\n    cursor: pointer;\n`;\n","import React from 'react';\nimport { useState } from 'react';\nimport {\n    Body,\n    CardTitle,\n    Content,\n    Description,\n    StyledCard,\n    StyledMedia,\n    Details,\n    FormSelect,\n    Subscribe,\n    MediaWrapper,\n} from './styles';\nimport { IFood } from '../../types/restaurant';\nimport { Box, InputLabel, MenuItem, Select } from '@mui/material';\nimport { useTranslation } from 'react-i18next';\ninterface IProps extends IFood {\n    handleClick?: () => void;\n    carbs: string;\n    name: string;\n    src: string;\n    description: string;\n    days: any[];\n}\nconst PlanCard: React.FC<IProps> = ({ handleClick, carbs, name, src, description, days = [] }) => {\n    const [value, setValue] = useState(0);\n    const { i18n } = useTranslation();\n\n    const options = [\n        { label: '210 kd, 28 days 1 (Fri, Sat Off)', value: 0, name: '210 kd, 28 days 1' },\n        { label: '210 kd, 28 days 2 (Fri, Sat Off)', value: 1, name: '210 kd, 28 days 2' },\n        { label: '210 kd, 28 days 3 (Fri, Sat Off)', value: 2, name: '210 kd, 28 days 3' },\n    ];\n    return (\n        <StyledCard>\n            <Body>\n                <CardTitle className=\"name\" gutterBottom variant=\"h5\">\n                    {name}\n                </CardTitle>\n                <MediaWrapper onClick={handleClick}>\n                    <StyledMedia image={src} title={name} />\n                    <Subscribe dir={i18n.dir()}>View Food/Subscribe</Subscribe>\n                </MediaWrapper>\n                <Content>\n                    <Details>\n                        <Box sx={{ maxWidth: 'calc(100% - 180px)' }}>\n                            <Description weight=\"500\">{carbs}</Description>\n                            <Description> {description}</Description>\n                        </Box>\n                        <FormSelect size=\"small\">\n                            <InputLabel id=\"food-select\">Package</InputLabel>\n                            <Select\n                                labelId=\"select-package\"\n                                id=\"select-package\"\n                                value={value}\n                                label=\"Package\"\n                                renderValue={(select: number) => {\n                                    const option = options[select];\n                                    return option.name;\n                                }}\n                                onChange={(e: any) => setValue(e.target.value)}\n                            >\n                                {options.map((option) => {\n                                    return (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    );\n                                })}\n                            </Select>\n                        </FormSelect>\n                    </Details>\n                </Content>\n            </Body>\n        </StyledCard>\n    );\n};\n\nexport default PlanCard;\n"],"names":["StyledMedia","styled","CardMedia","_templateObject","_taggedTemplateLiteral","CardTitle","Typography","_templateObject2","_ref","theme","palette","grey","main","Body","Box","_templateObject3","Description","_templateObject4","_ref2","weight","css","_templateObject5","Details","_templateObject6","_ref3","_templateObject7","secondary","dark","Content","CardContent","_templateObject8","FormSelect","FormControl","_templateObject9","StyledCard","_templateObject10","props","_templateObject11","primary","Subscribe","_templateObject12","_ref4","dir","_templateObject13","_ref5","_templateObject14","_ref6","_templateObject15","MediaWrapper","Button","_templateObject16","handleClick","carbs","name","src","description","_useState","days","useState","_useState2","_slicedToArray","value","setValue","i18n","useTranslation","options","label","_jsx","children","_jsxs","className","gutterBottom","variant","onClick","image","title","sx","maxWidth","size","InputLabel","id","Select","labelId","renderValue","select","onChange","e","target","map","option","MenuItem"],"sourceRoot":""}